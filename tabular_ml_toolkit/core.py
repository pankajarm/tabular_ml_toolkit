# AUTOGENERATED! DO NOT EDIT! File to edit: 00_dataframeloader.ipynb (unless otherwise specified).

__all__ = ['DataFrameLoader']

# Cell
import pandas as pd

# Cell

class DataFrameLoader:
    """
    Represent Data Frame Loader class

    Attributes:
    X_full: full dataframe load from raw input
    X_test_full: full test dataframe load from raw input
    X: features
    y: target
    """

    def __init__(self):
        self.X_full = None
        self.X_test = None
        self.X = None
        self.y = None

    def __str__(self):
        """Returns human readable string reprsentation"""
        return "DataFrameLoader object with X_full, X_test and X(features) dataframe and y(target) series"

    def __repr__(self):
        return self.__str__()

#     def __lt__(self):
#         """returns: boolean"""
#         return True

    #     core methods
    def from_csv(self,train_file_path:str,test_file_path:str, idx_col:str, ):
        # Read the csv files using pandas
        self.X_full = pd.read_csv(train_file_path, index_col=idx_col)
        self.X_test = pd.read_csv(test_file_path, index_col=idx_col)

    def prepare_X_y(self,input_df:object, target:str):
        # Remove rows with missing target
        self.X = input_df.dropna(axis=0, subset=[target])
        # separate target from predictors
        self.y = self.X[target]
        # drop target
        self.X = input_df.drop([target], axis=1)